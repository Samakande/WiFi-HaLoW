/** * main.c */
#include "psdu.h"
#include <cstring>
#include <iostream>


int main(void)
{
    const char* bitVector
    halow::modParams params(1, halow::CBW2, halow::SU, halow::SHORT_GI, 5);

    halow::psdu generate_data_field;

    std::vector<std::complex<double>> payload = generate_data_field.build_psdu( bitVector, params);

    //print the symbols
    for(int s = 0; s<params.length; s++)
    {
        for (int i =0; i< params.Nsa + 16; i++ )
        {
            std::cout<< "time sample " <<i<< " "<< payload[s*80+i]<<std::endl;
        }

        std::cout<<std::endl;
    }

    return 0;
}

