/**
 * main.c
 */
#include "qam.h"
#include "modulator.h"
#include <cstring>
#include <iostream>

int main(void)
{
    const char* bitVector
    halow::modParams params;
    params = params.mcss(2,3,"SISO");

    halow::modulator modTest{};

    std::vector<std::complex<double>> modulatedData = modTest.modulate(&params, bitVector);

    //print the constellation points
    for (int i = 0; i < params.Nsd; i++)
    {
        std::cout << "Constellation Point " << i << ": " << modulatedData[i] << std::endl;
    }


    return 0;

}

