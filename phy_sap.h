/*
 * phy_sap.h
 *
 *  Created on: Jul 12, 2023
 *      Author: Kudzai Samakande
 */

#ifndef PHY_SAP_H_
#define PHY_SAP_H_

#include "txvector.h"
#include <vector>

namespace halow
{
    class phy_config
    {
       void request(TXVECTOR /*config vector*/ &configvector); //generated by the MAC sublayer for the local PHY entity when it desires to change the configuration of the PHY

    };/* class  phy_config */

    class PHY_TXSTART
    {
    private:
        std::vector<unsigned char> &payload;

    public:
        PHY_TXSTART(std::vector<unsigned char> &payload);
        void request(TXVECTOR &txvector); //request by the mac to the local phy to start the transmission of the psdu
        void confirm(); //this is a transmit initialization response from the phy

    };/* class phy_txstart */

    class PHY_DATA
    {
        void request(std::vector<unsigned char> &payload, int user_index); //transfer of data from the mac to the local phy entity
        void indication(std::vector<unsigned char> rcvd_data); //transfer of data by the receiving phy to the local mac entity
        void confirm(); //issued by phy to mac to confirm the reception of the payload

    };/* class phy_data */


    class phy_txend
    {
        void request(); //request by the mac that the phy stop the current transmission of the psdu
        void confirm(std::vector<unsigned char> scramble_or_crc); //issued by the phy to every phy_txend.request

    };/* class phy_txend */


} /* namespace halow */

#endif /* PHY_SAP_H_ */
