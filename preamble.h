/*
 * preamble.h
 *
 *  Created on: Jul 7, 2023
 *      Author: Kudzai Samakande
 */

#ifndef PREAMBLE_H_
#define PREAMBLE_H_

#include "txvector.h"
#include <complex>


namespace halow
{
    inline std::vector<std::complex<double>> STF_2M = {
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {1, 1},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {-1, -1},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {1, 1},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {-1, -1},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {-1, -1},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {1, 1},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {-1, -1},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {-1, -1},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {1, 1},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {1, 1},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {1, 1},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {1, 1},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0}
    };

    std::vector<std::complex<double>> generate_stf_field(halow::TXVECTOR &txvector);

    inline std::vector<std::complex<double>> LTF_2M = {
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0},
                {1,0},
                {1,0},
                {1,0},
                {1,0},
                {-1,0},
                {-1,0},
                {1,0},
                {1,0},
                {-1,0},
                {1,0},
                {-1,0},
                {1,0},
                {1,0},
                {1,0},
                {1,0},
                {1,0},
                {1,0},
                {-1,0},
                {-1,0},
                {1,0},
                {1,0},
                {-1,0},
                {1,0},
                {-1,0},
                {1,0},
                {1,0},
                {1,0},
                {1,0},
                {0.0, 0.0},
                {1, 0},
                {-1, 0},
                {-1, 0},
                {1, 0},
                {1, 0},
                {-1, 0},
                {1, 0},
                {-1, 0},
                {1, 0},
                {-1, 0},
                {-1, 0},
                {-1, 0},
                {-1, 0},
                {-1, 0},
                {1, 0},
                {1, 0},
                {-1, 0},
                {-1, 0},
                {1, 0},
                {-1, 0},
                {1, 0},
                {-1, 0},
                {1, 0},
                {1, 0},
                {1, 0},
                {1, 0},
                {1, 0},
                {1,0},
                {0.0, 0.0},
                {0.0, 0.0},
                {0.0, 0.0}
            };

    std::vector<std::complex<double>> generate_ltf1_field(halow::TXVECTOR &txvector);
    std::vector<std::complex<double>> generate_sig_field(halow::TXVECTOR &txvector);

} //namespace halow



#endif /* PREAMBLE_H_ */
